package virtualRobot.logicThreads.TestingAutonomouses;

import java.util.concurrent.atomic.AtomicBoolean;

import virtualRobot.AutonomousRobot;
import virtualRobot.LogicThread;
import virtualRobot.commands.Command;
import virtualRobot.commands.Pause;
import virtualRobot.commands.Rotate;
import virtualRobot.commands.Translate;

/**
 * Created by Yanjun on 11/28/2015.
 * used for tuning PID
 */
public class PIDTester extends LogicThread<AutonomousRobot> {
    public static boolean forward = true;
    @Override
    public void loadCommands() {
<<<<<<< HEAD
        Translate.setGlobalMaxPower(1.0);
        //commands.add(new Translate(5000, Translate.Direction.FORWARD, 0));
=======
        /*Translate.setGlobalMaxPower(1.0);
        commands.add(new Translate(6000, Translate.Direction.FORWARD, 0));
        commands.add(new Pause(2000));
        commands.add(new Translate(3000, Translate.Direction.FORWARD, 0));
        commands.add(new Pause(2000));
        commands.add(new Translate(500, Translate.Direction.FORWARD, 0));*/

        commands.add(new Translate(3000, Translate.Direction.RIGHT, 0));

















>>>>>>> refs/remotes/origin/master
        //commands.add(new Pause(3000));
        //commands.add(new Translate(7000, Translate.Direction.FORWARD, 0));
        //commands.add(new Translate(7000, Translate.Direction.FORWARD, 0));
        //commands.add(new Pause(3000));
        //commands.add(new Translate(3000, Translate.Direction.BACKWARD, 0));
        //commands.add(new Pause(3000));
        //commands.add(new Translate(5000, forward ? Translate.Direction.FORWARD : Translate.Direction.BACKWARD, 0));
//        commands.add(new Pause(3000));
//        commands.add(new Translate(7000, Translate.Direction.LEFT, 0));
        //commands.add(new Rotate(90));

<<<<<<< HEAD
        //LOW: 0, HIGH: .2
        commands.add(new Translate(0.2,5000,-1,new AtomicBoolean(), Translate.Direction.FORWARD));
=======
        //HIGH: .008125; LOW: .007
        //HIGH: .005; LOW: .00475
        //Translate c = new Translate(.004,5000,-1,new AtomicBoolean(), Translate.Direction.FORWARD);
        //commands.add(c);
        //Command.AUTO_ROBOT.addToProgress("Translate KP:" + c.translateController.getKp());
>>>>>>> refs/remotes/origin/master
//        commands.add(new Rotate(90, 1));

    }
}
